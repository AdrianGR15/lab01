datos_ESP<- PEATONES_2020 %>%
filter(iso_code=='ESP')
rm(datos_SPA)
View(datos_ESP)
attach(datos_ESP)
plot(total_cases, type = 'l')
plot(total_deaths, type = 'l')
plot(total_tests, type = 'l')
plot(total_deaths, type = 'l')
plot(new_cases)
plot(new_cases, type = 'l')
plot(new_cases, type = 'b')
plot(new_cases, type = 'c')
plot(new_cases, type = 'p')
plot(new_cases, type = 't')
plot(new_cases, type = 'l')
plot(new_cases_smoothed , type = 'l')
View(datos_ESP)
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15', '2020-06-1'))
View(datos_ESP_1)
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15, 2020-06-1'))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15, 2020-06-1'))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c(2020-02-15, 2020-06-1))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c(2020-02-15, 2020-06-01))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15', '2020-06-01'))
View(datos_ESP_1)
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15'|'2020-06-01'))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15'&'2020-06-01'))
datos_ESP_1<- datos_ESP %>%
filter(date %in% c('2020-02-15','2020-06-01'))
View(datos_ESP_1)
A <- matrix(c(1,2,6,-7,
2,3,7,-8,
-1,-2,9,-7,
3,2,11,-9,
0,1,3,2,
0,1,1,2,
0,1,1,4,
0,1,2,1),8,4)
A
?matrix
A <- matrix(c(1,2,6,-7,
2,3,7,-8,
-1,-2,9,-7,
3,2,11,-9,
0,1,3,2,
0,1,1,2,
0,1,1,4,
0,1,2,1),8,4, byrow = F)
A
A <- matrix(c(1,2,6,-7,
2,3,7,-8,
-1,-2,9,-7,
3,2,11,-9,
0,1,3,2,
0,1,1,2,
0,1,1,4,
0,1,2,1),8,4, byrow = T)
A
a <- svd(A) #Traspuesta de A
a
D <- diag(a$d)
D
View(D)
a$u
a$v
X1 <- a$u %*% D %*% t(a$v)
round(X1)
t(s$u) %*% A %*% s$v
t(a$u) %*% A %*% a$v
#Veamos que es OK
round(D-t(a$u) %*% A %*% a$v ,2)
vsA <- eigen(t(A) %*% A)
valSing <- vsA$values^0.5  #quitamos el cuadrado de los autovalores
valSing
D
a #la primera linea son la raiz cuadrada de los autovalores de s. y las otras dos matrices son matrices ortogonales que si las multiplocampos obtenemos la matriz original
?dbinom
x<-0:10
nensayos<-10
probexito<-0.25
dbinom(x,nensayos,probexito)
abla<-cbind(x,dbinom(x,nensayos,probexito))
tabla
tabla<-cbind(x,dbinom(x,nensayos,probexito))
tabla
#Tabla de probabilidad acumulada
pbinom(x,nensayos,probexito)
pbinom(x,nensayos,probexito)
tablaAcumulada<-cbind(x,pbinom(x,nensayos,probexito))
tablaAcumulada
plot(tablaAcumulada)
plot(tablaAcumulada, type = 'l')
1-dbinom(4,10,probexito)
dbinom(5,10,probexito)
dbinom(4,10,probexito)
tabla
binom(4,10,probexito)
dbinom(4,10,probexito)
dbinom(5:10,10,probexito)
1- dbinom(5,10,probexito)
1- pbinom(4,10,probexito)
pbinom(5,10,probexito)
library(tidyverse)
?arrange
votes
library(dplyr)
votes
data(votes)
library(tidyverse)
data("iris")
View(iris)
View(iris)
attach(iris)
View(iris)
unique(Species)
library(tidyverse)
summarise(iris %>%
filter(setosa))
summarise(iris %>%
filter(Species == 'setosa'))
iris %>%
filter(Species == 'setosa')
setosa <- iris %>%
filter(Species == 'setosa')
summarise(setosa)
summarise(iris)
rm(setosa)
names(iris)
iris %>%
group_by(Species) %>%
summarize(media=mean(c("Sepal.Length" ,"Sepal.Width" , "Petal.Length" ,"Petal.Width"  ,"Species" )))
iris %>%
group_by(Species) %>%
summarize(media=mean(c("Sepal.Length" ,"Sepal.Width" , "Petal.Length" ,"Petal.Width"  ,"Species" ), na.rm = T))
iris %>%
group_by(Species) %>%
summarize(media=mean(c("Sepal.Length" ,"Sepal.Width" , "Petal.Length" ,"Petal.Width"  ,"Species" ), na.rm = T))
count(is.na(iris))
n(is.na(iris))
is.na(iris)
iris <- na.omit(iris)
iris %>%
group_by(Species) %>%
mutate(media=mean(c("Sepal.Length" ,"Sepal.Width" , "Petal.Length" ,"Petal.Width"  ,"Species" ), na.rm = T))
descipcion <- iris %>%
group_by(Species) %>%
mutate(media=mean(c("Sepal.Length" ,"Sepal.Width" , "Petal.Length" ,"Petal.Width"  ,"Species" ), na.rm = T))
View(descipcion)
View(descipcion)
descipcion <- iris %>%
group_by(Species) %>%
summarize(media=mean(c, na.rm = T))
View(descipcion)
View(iris)
descipcion <- iris %>%
group_by(Species) %>%
summarize(media=mean(Sepal.Length, na.rm = T))
View(descipcion)
descipcion <- iris %>%
group_by(Species) %>%
summarize(me_Se_Le=mean(Sepal.Length, na.rm = T))
View(descipcion)
View(iris)
descipcion <- iris %>%
group_by(Species) %>%
summarize(me_Se_Le=mean(Sepal.Length, na.rm = T),
me_Se_Wi=mean(Sepal.Width, na.rm = T),
me_Pe_Le=mean(Petal.Length, na.rm = T),
me_Pe_Wi=mean(Petal.Width, na.rm = T))
View(descipcion)
descipcion <- iris %>%
group_by(Species) %>%
summarize(me_Se_Le=mean(Sepal.Length, na.rm = T),
me_Se_Wi=mean(Sepal.Width, na.rm = T),
me_Pe_Le=mean(Petal.Length, na.rm = T),
me_Pe_Wi=mean(Petal.Width, na.rm = T),
va_Se_Le=var(Sepal.Length, na.rm = T),
va_Se_Wi=var(Sepal.Width, na.rm = T),
va_Pe_Le=var(Petal.Length, na.rm = T),
va_Pe_Wi=var(Petal.Width, na.rm = T)
ma_Se_Le=max(Sepal.Length, na.rm = T),
ma_Se_Wi=max(Sepal.Width, na.rm = T),
ma_Pe_Le=max(Petal.Length, na.rm = T),
ma_Pe_Wi=max(Petal.Width, na.rm = T),
mi_Se_Le=min(Sepal.Length, na.rm = T),
mi_Se_Wi=min(Sepal.Width, na.rm = T),
mi_Pe_Le=min(Petal.Length, na.rm = T),
mi_Pe_Wi=min(Petal.Width, na.rm = T),)
descipcion <- iris %>%
group_by(Species) %>%
summarize(me_Se_Le=mean(Sepal.Length, na.rm = T),
me_Se_Wi=mean(Sepal.Width, na.rm = T),
me_Pe_Le=mean(Petal.Length, na.rm = T),
me_Pe_Wi=mean(Petal.Width, na.rm = T),
va_Se_Le=var(Sepal.Length, na.rm = T),
va_Se_Wi=var(Sepal.Width, na.rm = T),
va_Pe_Le=var(Petal.Length, na.rm = T),
va_Pe_Wi=var(Petal.Width, na.rm = T)
ma_Se_Le=max(Sepal.Length, na.rm = T),
ma_Se_Wi=max(Sepal.Width, na.rm = T),
ma_Pe_Le=max(Petal.Length, na.rm = T),
ma_Pe_Wi=max(Petal.Width, na.rm = T),
mi_Se_Le=min(Sepal.Length, na.rm = T),
mi_Se_Wi=min(Sepal.Width, na.rm = T),
mi_Pe_Le=min(Petal.Length, na.rm = T),
mi_Pe_Wi=min(Petal.Width, na.rm = T))
descipcion <- iris %>%
group_by(Species) %>%
summarize(me_Se_Le=mean(Sepal.Length, na.rm = T),
me_Se_Wi=mean(Sepal.Width, na.rm = T),
me_Pe_Le=mean(Petal.Length, na.rm = T),
me_Pe_Wi=mean(Petal.Width, na.rm = T),
va_Se_Le=var(Sepal.Length, na.rm = T),
va_Se_Wi=var(Sepal.Width, na.rm = T),
va_Pe_Le=var(Petal.Length, na.rm = T),
va_Pe_Wi=var(Petal.Width, na.rm = T),
ma_Se_Le=max(Sepal.Length, na.rm = T),
ma_Se_Wi=max(Sepal.Width, na.rm = T),
ma_Pe_Le=max(Petal.Length, na.rm = T),
ma_Pe_Wi=max(Petal.Width, na.rm = T),
mi_Se_Le=min(Sepal.Length, na.rm = T),
mi_Se_Wi=min(Sepal.Width, na.rm = T),
mi_Pe_Le=min(Petal.Length, na.rm = T),
mi_Pe_Wi=min(Petal.Width, na.rm = T))
View(descipcion)
View(descipcion)
summary(iris)
summary(iris %>%
group_by(Species))
summary(iris %>%
filter(Species=='setosa'))
summary(iris %>%
filter(Species=='setosa'))
summary(iris %>%
filter(Species=='versicolor'))
summary(iris %>%
filter(Species=='virginica'))
descipcion <- iris %>%
summarize(va_Se_Le=var(Sepal.Length, na.rm = T),
va_Se_Wi=var(Sepal.Width, na.rm = T),
va_Pe_Le=var(Petal.Length, na.rm = T),
va_Pe_Wi=var(Petal.Width, na.rm = T))
View(descipcion)
descipcion <- iris %>%
group_by(Species) %>%
summarize(va_Se_Le=var(Sepal.Length, na.rm = T),
va_Se_Wi=var(Sepal.Width, na.rm = T),
va_Pe_Le=var(Petal.Length, na.rm = T),
va_Pe_Wi=var(Petal.Width, na.rm = T))
View(descipcion)
?summary
source('~/Downloads/P4_AGR/cambios2.R', echo=TRUE)
tinytex::install_tinytex()
install.packages("shiny")
install.packages("shinythemes")
install.packages("DT")
install.packages("plotly")
install.packages(pander)
install.packages("pander")
install.packages("rmdformats")
install.packages("rmdformats")
install.packages("skimr")
install.packages("gridExtra")
install.packages("psych")
install.packages("fastDummies")
install.packages(XQuartz)
install.packages("x12")
library(skimr)
library(tidyverse)
library(corrplot)
library(ggcorrplot)
library(ggplot2)
data("iris")
force(iris)
skim(iris)
length(iris)
names(iris)
skim(iris)
skim2 <- function(x) {
skim(x)
}
skim2(iris)
summary(iris)
ggcorrplot(cor(iris %>%
select_at(!Species),
use = "complete.obs"),
hc.order = TRUE,
type = "lower",  lab = TRUE)
ggcorrplot(cor(iris %>%
select_at(!iris$Species),
use = "complete.obs"),
hc.order = TRUE,
type = "lower",  lab = TRUE)
library(corrplot)
library(tidyverse)
iris1 <- iris %>%
select(!Species)
pearson <- rcorr(as.matrix(iris1),type="pearson")
corrplot(pearson$r,type = "upper", is.corr = F, tl.col = "orange", tl.offset = 0.1, tl.srt = 30)
library(corrplot)
pearson <- rcorr(as.matrix(iris1),type="pearson")
corrplot(pearson$r,type = "upper", is.corr = F, tl.col = "orange", tl.offset = 0.1, tl.srt = 30)
chart.Correlation(iris1 %>%
histogram=TRUE, pch=19)
rcorr(as.matrix(iris1),type="pearson")
dsepall <- Sepal.Length – mena(Sepal.Length)
dsepall <- Sepal.Length – mean(Sepal.Length)
ggplot(iris aes(x=,Sepal.Length y=Sepal.Width)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(iris aes(x=,Sepal.Length y=Sepal.Width)) +
geom_point()
library(ggplot2)
ggplot(iris aes(x=,Sepal.Length y=Sepal.Width)) +
geom_point()
ggplot(iris aes(x=,Sepal.Length y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=,Sepal.Length y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=Sepal.Length y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
dsepall <- Sepal.Length – mean(Sepal.Length)
attach(iris)
dsepall <- Sepal.Length – mean(Sepal.Length)
cenSepe <- Sepal.Length
cenSepe <- Sepal.Length - mean(Sepal.Length)
dsepall <- Sepal.Length - mena(Sepal.Length)
dsepall <- Sepal.Length - mean(Sepal.Length)
dsepalw <- Sepal.Width - mean(Sepal.Width)
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw), shape=Species, color=Species ) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw), color=Species ) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(iris, aes(x=dsepall, y=dsepalw), color=Species ) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
dpetl <- Petal.Length - mean(Petal.Length)
dpetw <- Petal.Width - mean(Petal.Width)
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
par(mfrow=c(2,2))
dsepall <- Sepal.Length - mean(Sepal.Length)
dsepalw <- Sepal.Width - mean(Sepal.Width)
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
dpetl <- Petal.Length - mean(Petal.Length)
dpetw <- Petal.Width - mean(Petal.Width)
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
par(mfrow=c(1,2))
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
vars <- c(iris$Species)
corrplot(cor(iris %>%
select_at(vars(-vars)),
use = "complete.obs"),
method = "circle",type = "upper"
)
vars <- c(iris$Species)
corrplot(cor(iris %>%
select_at(vars(-vars)),
use = "complete.obs"),
method = "circle",type = "upper")
par(mfrow=c(2,1))
dsepall <- Sepal.Length - mean(Sepal.Length)
dsepalw <- Sepal.Width - mean(Sepal.Width)
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
dpetl <- Petal.Length - mean(Petal.Length)
dpetw <- Petal.Width - mean(Petal.Width)
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
par(mfrow=c(2,1))
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
par(mfrow=c(2,3))
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
ggplot(data.frame(dsepall,dsepalw), aes(x=dsepall, y=dsepalw, color=Species)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
library(Hmisc)
pearson <- rcorr(as.matrix(iris1),type="pearson") #la correlacion pearson de los rendimeintos
corrplot(pearson$r, type = "upper", order="hclust", tl.col="orange", tl.srt=45) #rojo correlacion negativa
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(1,1))
corrplot(pearson$r, type = "upper", order="hclust", tl.col="orange", tl.srt=45) #rojo correlacion negativa
par(mfrow=c(2,1))
corrplot(pearson$r, type = "upper", order="hclust", tl.col="orange", tl.srt=45) #rojo correlacion negativa
ggplot(data = iris, aes(y = Sepal.Length , x = Species)) +
geom_boxplot()
x <- c(1, 2, 3, 4) # cuatro gráficos diferentes
m <- matrix(x, ncol = 2)
layout(m)
corrplot(pearson$r, type = "upper", order="hclust", tl.col="orange", tl.srt=45) #rojo correlacion negativa
ggplot(data = iris, aes(y = Sepal.Length , x = Species)) +
geom_boxplot()
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()
facet_wrap(Species)
ggplot(data.frame(dpetl,dpetw), aes(x=dpetl, y=dpetw)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()+
facet_wrap(Species)
ggplot(iris, aes(x=dpetl, y=dpetw)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()+
facet_wrap(Species)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point() +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme_minimal()+
facet_wrap(Species)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width))+
geom_point()+
facet_wrap(Species)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species))+
geom_point()+
facet_wrap(Species)
?optim
setwd("/Users/adrian_gr/Desktop")
uni <- read_csv('4_1_data_AGR.csv')
library(readr)
setwd("/Users/adrian_gr/Desktop")
uni <- read_csv('4_1_data_AGR.csv')
setwd("/Users/adrian_gr/Desktop/Descenso_Gradiente/data")
uni <- read_csv('4_1_data_AGR.csv')
#Guardamos los regresores en y la cte en la matrix X y la variable dependiete en la Y
X <- as.matrix(uni[, c(1,2)])
X
Y <- as.matrix(uni$label)
Y
